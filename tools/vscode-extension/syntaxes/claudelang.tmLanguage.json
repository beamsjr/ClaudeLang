{
  "name": "ClaudeLang",
  "scopeName": "source.claudelang",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#booleans" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#effects" },
    { "include": "#lists" },
    { "include": "#sexpr" }
  ],
  "repository": {
    "comments": {
      "name": "comment.line.semicolon.claudelang",
      "match": ";.*$"
    },
    "strings": {
      "name": "string.quoted.double.claudelang",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.claudelang",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.claudelang",
          "match": "-?\\d+\\.\\d+([eE][+-]?\\d+)?"
        },
        {
          "name": "constant.numeric.integer.claudelang",
          "match": "-?\\d+([eE][+-]?\\d+)?"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.language.boolean.true.claudelang",
          "match": "#t"
        },
        {
          "name": "constant.language.boolean.false.claudelang",
          "match": "#f"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.claudelang",
          "match": "\\b(lambda|let|if|match|data|module|import|export|effect|handler|spec:contract|define)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.builtin.claudelang",
          "match": "\\b(\\+|-|\\*|/|=|<|>|<=|>=|cons|car|cdr|head|tail|null\\?|list\\?|number\\?|string\\?|boolean\\?|function\\?|not|and|or)\\b"
        }
      ]
    },
    "effects": {
      "patterns": [
        {
          "name": "support.function.effect.claudelang",
          "match": "\\b(io:print|io:read|state:get|state:set|error:raise|random:int|random:float|file:read|file:write|network:get|network:post)\\b"
        }
      ]
    },
    "lists": {
      "begin": "\\[",
      "end": "\\]",
      "name": "meta.list.claudelang",
      "patterns": [
        { "include": "$self" }
      ]
    },
    "sexpr": {
      "begin": "\\(",
      "end": "\\)",
      "name": "meta.sexpr.claudelang",
      "patterns": [
        { "include": "$self" }
      ]
    }
  }
}