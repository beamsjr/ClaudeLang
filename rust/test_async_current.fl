;; Test async/await with current implementation
;; Note: async currently just executes the body, doesn't create promises

;; Test 1: Async executes immediately
(print-line "Test 1: Async executes immediately")
(async (print-line "Inside async"))

;; Test 2: Spawn creates a goroutine
(print-line "\nTest 2: Testing spawn")
(spawn (lambda () (print-line "Spawned task running")))

;; Test 3: Channels
(print-line "\nTest 3: Testing channels")
(let ((ch (chan)))
  (do
    ;; Send a value
    (send! ch "Hello from channel")
    ;; Receive it
    (let ((msg (recv! ch)))
      (print-line msg))))

;; Test 4: Spawn with channels
(print-line "\nTest 4: Spawn with channels")
(let ((ch (chan)))
  (do
    ;; Spawn a sender
    (spawn (lambda () 
      (do
        (print-line "Sender: sending message")
        (send! ch "Message from spawned task"))))
    ;; Small delay to let spawn run
    (+ 1 1)
    ;; Receive message
    (let ((msg (recv! ch)))
      (print-line msg))))