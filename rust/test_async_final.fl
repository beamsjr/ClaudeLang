;; FluentAI Async/Await Feature Test

;; Test 1: Channel creation works
(print-line "Test 1: Channel creation")
(let ((ch (chan))) 
  (print-line ch))

;; Test 2: Async executes immediately (no promises yet)
(print-line "\nTest 2: Async block")
(async (print-line "Async executes immediately"))

;; Test 3: Spawn creates goroutines
(print-line "\nTest 3: Spawn")
(spawn (lambda () (print-line "Spawned task running")))

;; Small delay
(let ((x (+ 1 2 3 4 5))) x)

;; Test 4: Channel send/receive works
(print-line "\nTest 4: Channel communication")
(let ((ch (chan)))
  (begin
    (send! ch "Hello channels!")
    (print-line (recv! ch))))

(print-line "\nConclusion: Basic async primitives work!")
(print-line "- Channels: YES") 
(print-line "- Send/Receive: YES")
(print-line "- Spawn: YES (creates goroutines)")
(print-line "- Async: PARTIAL (executes immediately, no promises)")
(print-line "- Await: NO (requires promises to be implemented)")